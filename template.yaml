AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Custom resource for creating a bucket policy, especially for Service Catalog.
  Adds the provisioning user as a principal, along with additional optional
  principals.

Globals:
  Function:
    Timeout: 5

Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: policy_maker/
      Handler: app.handler
      Runtime: python3.8
      Role: !GetAtt FunctionRole.Arn

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref FunctionPolicy

  FunctionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 's3:GetBucketTagging'
              - 's3:PutBucketPolicy'
              - 's3:DeleteBucketPolicy'
            Resource: '*'

Outputs:
  FunctionName:
    Value: !Ref Function
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-FunctionName'
  FunctionArn:
    Value: !GetAtt Function.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-FunctionArn'
